// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/unbeman/ya-prac-go-first-grade/internal/connection (interfaces: AccrualConnector)

// Package mock_connection is a generated GoMock package.
package mock_connection

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/unbeman/ya-prac-go-first-grade/internal/model"
)

// MockAccrualConnector is a mock of AccrualConnector interface.
type MockAccrualConnector struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualConnectorMockRecorder
}

// MockAccrualConnectorMockRecorder is the mock recorder for MockAccrualConnector.
type MockAccrualConnectorMockRecorder struct {
	mock *MockAccrualConnector
}

// NewMockAccrualConnector creates a new mock instance.
func NewMockAccrualConnector(ctrl *gomock.Controller) *MockAccrualConnector {
	mock := &MockAccrualConnector{ctrl: ctrl}
	mock.recorder = &MockAccrualConnectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualConnector) EXPECT() *MockAccrualConnectorMockRecorder {
	return m.recorder
}

// GetOrderAccrual mocks base method.
func (m *MockAccrualConnector) GetOrderAccrual(arg0 context.Context, arg1 string) (model.OrderAccrualInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderAccrual", arg0, arg1)
	ret0, _ := ret[0].(model.OrderAccrualInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderAccrual indicates an expected call of GetOrderAccrual.
func (mr *MockAccrualConnectorMockRecorder) GetOrderAccrual(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderAccrual", reflect.TypeOf((*MockAccrualConnector)(nil).GetOrderAccrual), arg0, arg1)
}
